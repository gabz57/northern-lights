apply plugin: 'java'
apply plugin: 'org.springframework.boot'
//apply plugin: 'org.springframework.experimental.aot'
//apply plugin: 'org.graalvm.buildtools.native'
apply plugin: 'org.springdoc.openapi-gradle-plugin'

configurations {
    // exclude Tomcat to use Reactor Netty
    implementation.exclude module: 'spring-boot-starter-tomcat'
}

dependencies {
    implementation project(':chat:apps:northernlights-chat-ui')
    // implementation "org.webjars:webjars-locator-core"
    implementation "org.springframework.boot:spring-boot-starter"
    implementation "org.springframework.boot:spring-boot-starter-webflux"
    implementation "org.springframework.boot:spring-boot-starter-security"
    implementation "org.springframework.boot:spring-boot-starter-validation"
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-json"

    implementation "org.springframework.data:spring-data-commons"

    implementation "com.auth0:java-jwt"

    implementation project(':chat:libs:northernlights-chat-core')
    implementation project(':libs:northernlights-security')
    implementation project(':libs:northernlights-api-core')

//    implementation project(":chat:libs:northernlights-chat-report")
    implementation project(":chat:libs:northernlights-chat-store")
    implementation project(":chat:libs:northernlights-chat-store-r2dbc")


    // Open Api (note: webflux-ui (Swagger) could run on a separate module)
//    implementation "org.springdoc:springdoc-openapi-webflux-ui"
    implementation "org.springdoc:springdoc-openapi-webflux-core"
    implementation "org.springdoc:springdoc-openapi-security"

    // Test fixtures
//    testFixturesImplementation "org.springframework.security:spring-security-test"
//    testFixturesImplementation "com.auth0:java-jwt:${javaJwtVersion}"
//    testFixturesImplementation testFixtures(project(':libs:northernlights-commons'))
    testFixturesImplementation "org.apache.commons:commons-lang3"
    testFixturesImplementation "org.springframework:spring-web"
    testFixturesImplementation "org.assertj:assertj-core"

    // Testing
    testImplementation "net.javacrumbs.json-unit:json-unit-assertj"
//    testImplementation testFixtures(project(':libs:northernlights-commons'))
    testImplementation testFixtures(project(':chat:libs:northernlights-chat-core'))
//    integrationTestImplementation "io.r2dbc:r2dbc-h2"
//    integrationTestImplementation "com.h2database:h2"
//
//    e2eTestImplementation "org.testcontainers:postgresql"
//    e2eTestImplementation "org.testcontainers:r2dbc"
//    e2eTestImplementation "org.testcontainers:junit-jupiter"

    e2eTestImplementation testFixtures(project(':libs:northernlights-store-r2dbc'))

    // spring-jdbc for sql migration
    e2eTestImplementation project(':chat:libs:northernlights-chat-store-migration')
    e2eTestImplementation "org.springframework.boot:spring-boot-starter-jdbc"
//    e2eTestImplementation "org.springframework:spring-jdbc"
    e2eTestImplementation "org.liquibase:liquibase-core"
    e2eTestImplementation "org.postgresql:postgresql"
}

openApi {
    apiDocsUrl.set("http://localhost:8080/api-docs")
//    outputDir.set(file("$buildDir/docs"))
//    outputFileName.set("swagger.json")
    waitTimeInSeconds.set(10)
//    forkProperties.set("-Dspring.profiles.active=special")
//    forkProperties = System.properties
}

//bootBuildImage {
//    builder = 'paketobuildpacks/builder:tiny'
//    environment = ['BP_NATIVE_IMAGE': 'true']
//}
