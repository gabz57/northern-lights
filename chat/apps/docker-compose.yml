version: '3'

volumes:
  northernlights-chat-ui-node-modules:
    name: northernlights-chat-ui-node-modules

networks:
  default:
    external:
      name: northernlights-net

services:

  nginx-proxy:
    image: jwilder/nginx-proxy:alpine
    ports:
      - "80:80"
      - "443:443"
    environment:
      DEFAULT_HOST: localhost
      # northernlights.local doesn't work with Google Authentication in test mode
      # See https://github.com/nginx-proxy/nginx-proxy#usage for path routing details
    volumes:
      - ./docker/nginx-proxy/certs:/etc/nginx/certs
      - /var/run/docker.sock:/tmp/docker.sock:ro
    restart: unless-stopped

  northernlights-chat-db:
    container_name: northernlights-chat-db
    image: debezium/postgres:12-alpine
    restart: always
    user: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: northernlights-chat
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./docker/postgresql/data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5

  northernlights-chat-db-liquibase:
    container_name: northernlights-chat-db-liquibase
    image: liquibase/liquibase
    command: "--url='jdbc:postgresql://northernlights-chat-db:5432/northernlights-chat?user=postgres&password=postgres' --changelog-file='db.changelog-master.xml' update"
    volumes:
      - ./../libs/northernlights-chat-store-migration/src/main/resources/db/changelog:/liquibase/changelog
    depends_on:
      northernlights-chat-db:
        condition: service_healthy

  northernlights-chat-redis:
    container_name: northernlights-chat-redis
    image: redislabs/redismod:latest
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - ./docker/redis/data:/data

  northernlights-chat-debezium:
    container_name: northernlights-chat-debezium
    image: io.northern-lights/northernlights-chat-api-event-publisher:0.0.1-SNAPSHOT
    restart: always
    volumes:
      - ./docker/debezium/data:/data
    environment:
      CHAT_DEBEZIUM_OFFSET_FILE: /data/offsets.dat
      CHAT_DEBEZIUM_HISTORY_FILE: /data/dbhistory.dat
      CHAT_DB_HOST: northernlights-chat-db
      CHAT_DB_PORT: 5432
      CHAT_DB_NAME: northernlights-chat
      CHAT_DB_USER: postgres
      CHAT_DB_PASSWORD: postgres
      CHAT_DB_SERVER_NAME: nl_chat_dbz
      CHAT_REDIS_HOST: northernlights-chat-redis
      CHAT_REDIS_PORT: 6379
      CHAT_REDIS_WORKSPACE: northernlights
    depends_on:
      northernlights-chat-redis:
        condition: service_started
      northernlights-chat-db:
        condition: service_started
#      northernlights-chat-db-liquibase:
#        condition: service_completed_successfully

  chat-api:
    container_name: northernlights-chat-api
    image: io.northern-lights/northernlights-chat-api:0.0.1-SNAPSHOT
    expose:
      - 8080
    environment:
      spring_profiles_active: local
      VIRTUAL_HOST: localhost
      VIRTUAL_PORT: 8080
      VIRTUAL_PATH: /v1
      # VIRTUAL_DEST: /
      CHAT_DB_HOST: northernlights-chat-db
      CHAT_DB_PORT: 5432
      CHAT_DB_NAME: northernlights-chat
      CHAT_DB_USER: postgres
      CHAT_DB_PASSWORD: postgres
      CHAT_REDIS_HOST: northernlights-chat-redis
      CHAT_REDIS_PORT: 6379
      # CHAT_REDIS_PASSWORD=
      CHAT_REDIS_WORKSPACE: northernlights
    depends_on:
      northernlights-chat-db:
        condition: service_healthy
      northernlights-chat-redis:
        condition: service_started
#      northernlights-chat-debezium:
#        condition: service_started

  chat-front:
    image: node:16.15.1
    working_dir: /northernlights-chat-ui
    expose:
      - 8081
    environment:
      VIRTUAL_HOST: localhost
      VIRTUAL_PORT: 8081
      VIRTUAL_PATH: /
      # VIRTUAL_DEST: /
      NODE_ENV: 'development'
      HOST: '0.0.0.0'
      PORT: 8081
    command: /bin/sh -c "yarn && yarn dev"
    volumes:
      - './northernlights-chat-ui:/northernlights-chat-ui:cached'
      - 'northernlights-chat-ui-node-modules:/northernlights-chat-ui/node_modules'
    depends_on:
      nginx-proxy:
        condition: service_started
